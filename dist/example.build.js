!function(t){function r(e){if(n[e])return n[e].exports;var i=n[e]={exports:{},id:e,loaded:!1};return t[e].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}var n={};return r.m=t,r.c=n,r.p="",r(0)}([function(module,exports,__webpack_require__){eval('var Transfer = __webpack_require__( 1 );\r\n\r\nvar Main = {\r\n\tinit: function() {\r\n\t\tTransfer.createVm({\r\n\t\t\tvmId: \'subActivity\'\r\n\t\t});\r\n\r\n\t\tTransfer.init({\r\n\t\t\tconf: {\r\n\t\t\t\tId: \'SubActivityId\',\r\n\t\t\t\tName: \'SubActivityName\'\r\n\t\t\t},\r\n\t\t\torderedList: [\r\n\t\t\t\t{\r\n\t\t\t\t\tSubActivityName: "123",\r\n\t\t\t\t\tSubActivityId: 1\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityName: "223",\r\n\t\t\t\t\tSubActivityId: 2\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityId: 4,\r\n\t\t\t\t\tSubActivityName: "445"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tallList: [\r\n\t\t\t\t{\r\n\t\t\t\t\tSubActivityName: "123",\r\n\t\t\t\t\tSubActivityId: 1\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityName: "223",\r\n\t\t\t\t\tSubActivityId: 2\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityId: 3,\r\n\t\t\t\t\tSubActivityName: "345"\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityId: 4,\r\n\t\t\t\t\tSubActivityName: "456"\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityName: "567",\r\n\t\t\t\t\tSubActivityId: 5\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityName: "678",\r\n\t\t\t\t\tSubActivityId: 6\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityId: 7,\r\n\t\t\t\t\tSubActivityName: "789"\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityId: 8,\r\n\t\t\t\t\tSubActivityName: "890"\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityName: "901",\r\n\t\t\t\t\tSubActivityId: 9\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityName: "123",\r\n\t\t\t\t\tSubActivityId: 10\r\n\t\t\t\t}, {\r\n\t\t\t\t\tSubActivityId: 11,\r\n\t\t\t\t\tSubActivityName: "1123"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\t\t\r\n\t\tavalon.scan();\r\n\r\n\t\tthis.bind();\r\n\t},\r\n\tbind: function() {\r\n\t\t$( document ).on(\'click\', \'#J_Otput\', function() {\r\n\t\t\tvar result = Transfer.getResult();\r\n\t\t\tconsole.log( result );\r\n\t\t\t$( \'#J_OtputWrap\' ).html( JSON.stringify(result) );\r\n\t\t});\r\n\t}\r\n};\r\n\r\nMain.init();\n\n//////////////////\n// WEBPACK FOOTER\n// ./example.js\n// module id = 0\n// module chunks = 0\n//# sourceURL=webpack:///./example.js?')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @Author:   Live\r\n * @Email:       ivill@live.com\r\n * @DateTime:   2016-10-27 10:52\r\n * @Description: 穿梭框 v1.0.0\r\n * @Require: [jQuery, Bootstrap, Aavalon]\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n    var vm = null;\r\n\r\n    function _watch() {\r\n        vm.$watch('keyword', function(val) {\r\n            _search( val, vm.$model.matchedList );\r\n        });\r\n    }\r\n    \r\n    function _moveUp( index ) {\r\n        if ( index === 0 ) {\r\n            return false;\r\n        }\r\n\r\n        _changeArrayPosition( index, index - 1 );\r\n    }\r\n\r\n    function _moveDown( index ) {\r\n        if ( index === vm.$model.orderedList.length - 1 ) {\r\n            return false;\r\n        }\r\n\r\n        _changeArrayPosition( index, index + 1 );\r\n    }\r\n\r\n    function _changeArrayPosition(index, toIndex) {\r\n        var temp = null,\r\n            arr = vm.$model.orderedList;\r\n\r\n        temp = arr[ toIndex ];\r\n        arr[ toIndex ] = arr[ index ];\r\n        arr[ index ] = temp;\r\n\r\n        vm.orderedList = arr;\r\n    }\r\n\r\n    function _getSelectedList( ulSelector ) {\r\n        var result = [],\r\n            $all = $( ulSelector ).find( 'input:checkbox' );\r\n\r\n        $all.map(function(index, ele) {\r\n            if ( $(ele).prop('checked') ) {\r\n                result.push( ele.value );\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    function _filterArrary( originalArray, selectedArray, bool ) {\r\n        var i,\r\n            arr = [],\r\n            len = selectedArray.length;\r\n\r\n        arr = originalArray.filter(function( item, index ) {\r\n           for (var i = 0; i < selectedArray.length; i++) {\r\n               if (item[ vm.conf.Id ] == selectedArray[i]) {\r\n                 return !bool;\r\n               }\r\n           }\r\n\r\n           return bool;\r\n        });\r\n\r\n        return arr;\r\n    }\r\n\r\n\r\n    function _getMatchedList( orderedList, allList) {\r\n        var i,\r\n            result = [],\r\n            len = orderedList.length;\r\n\r\n        result = allList.filter(function(item) {\r\n            for (i = 0; i < len; i++) {\r\n                if (item[ vm.conf.Id ] == orderedList[i][ vm.conf.Id ]) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    function _search( keyword, matchedList ) {\r\n        keyword = $.trim( keyword );\r\n\r\n        if (keyword !== '') {\r\n            var result = matchedList.filter(function (item) {\r\n                return ( (item[ vm.conf.Id ] + '').indexOf(keyword) > -1 || (item[ vm.conf.Name ] + '').indexOf(keyword) > -1 );\r\n            });\r\n\r\n            vm.searchedList = result;\r\n        } else {\r\n            vm.searchedList = matchedList;\r\n        }\r\n    }\r\n\r\n    function createVm( options ) {\r\n        vm = avalon.define({\r\n            $id: options.vmId,\r\n            keyword: '',\r\n            conf: {\r\n                Id: 'Id',\r\n                Name: 'Name'\r\n            },\r\n            allList: [], // 总列表\r\n            matchedList: [], // 总列表 和 排序列表 的交集列表\r\n            orderedList: [], // 左侧排序列表（目的列表）\r\n            searchedList: [], // 搜索出来的列表\r\n            transfer: function( ulSelector, sender, receiver ) {\r\n                var originalArray = vm.$model[ sender ],\r\n                    receiverArray = vm.$model[ receiver ],\r\n                    selectedArray = _getSelectedList( ulSelector );\r\n\r\n                vm[ sender ] = _filterArrary( originalArray, selectedArray, true );\r\n                vm[ receiver ] = receiverArray.concat( _filterArrary(originalArray, selectedArray, false ) );\r\n\r\n                _search( vm.$model.keyword, vm.$model.matchedList );\r\n            },\r\n            moveUp: function( index ) {\r\n                _moveUp( index );\r\n            },\r\n            moveDown: function( index ) {\r\n                _moveDown( index );\r\n            }\r\n        });\r\n\r\n        _watch();\r\n        avalon.scan();\r\n\r\n        return vm;\r\n    }\r\n\r\n    function init( options ) {\r\n        var list = [];\r\n\r\n        $.extend( vm.conf, options.conf );\r\n        vm.allList =  options.allList;\r\n        vm.orderedList =  options.orderedList;\r\n\r\n        list = _getMatchedList( options.orderedList, options.allList );\r\n        vm.matchedList =  list;\r\n        vm.searchedList = list;\r\n    }\r\n\r\n    function reset() {\r\n        vm.keyword = '';\r\n        vm.allList = [];\r\n        vm.matchedList = [];\r\n        vm.orderedList = [];\r\n        vm.searchedList = [];\r\n    }\r\n\r\n    function getResult() {\r\n        return vm.$model.orderedList;\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        reset: reset,\r\n        createVm: createVm,\r\n        getResult: getResult\r\n    };\r\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//////////////////\n// WEBPACK FOOTER\n// ./transfer.js\n// module id = 1\n// module chunks = 0\n//# sourceURL=webpack:///./transfer.js?")}]);